{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","props","selectedTabId","tabs","changeTab","className","map","tab","type","onClick","id","classNames","active","title","find","content","App","state","selectedTab","tabId","currentTab","setState","this","React","Component","ReactDOM","render","document","getElementById"],"mappings":"0OASaA,EAAwB,SAACC,GAAW,IAAD,EACtCC,EAAmCD,EAAnCC,cAAeC,EAAoBF,EAApBE,KAAMC,EAAcH,EAAdG,UAE7B,OACE,qCACE,oBAAIC,UAAU,eAAd,SACGF,EAAKG,KAAI,SAAAC,GAAG,OACX,6BACE,wBACEC,KAAK,SACLC,QAAS,kBAAML,EAAUG,EAAIG,KAC7BL,UAAWM,IAAW,CACpB,YAAY,EACZC,OAAQL,EAAIG,KAAOR,IALvB,SAQGK,EAAIM,SATAN,EAAIG,SAejB,sCACGP,EAAKW,MAAK,SAAAP,GAAG,OAAIA,EAAIG,KAAOR,YAD/B,aACG,EAA4Ca,cC1B/CZ,EAAc,CAClB,CAAEO,GAAI,QAASG,MAAO,QAASE,QAAS,eACxC,CAAEL,GAAI,QAASG,MAAO,QAASE,QAAS,eACxC,CAAEL,GAAI,QAASG,MAAO,QAASE,QAAS,gBAmC3BC,E,4MA3BbC,MAAe,CACbC,YAAaf,EAAK,I,EAGpBC,UAAY,SAACe,GACX,IAAMC,EAAajB,EAAKW,MAAK,SAAAP,GAAG,OAAIA,EAAIG,KAAOS,MAAUhB,EAAK,GAE9D,EAAKkB,SAAS,CAAEH,YAAaE,K,4CAG/B,WACE,IAAQF,EAAgBI,KAAKL,MAArBC,YACAR,EAAcQ,EAAdR,GAAIG,EAAUK,EAAVL,MAEZ,OACE,sBAAKR,UAAU,MAAf,UACE,uDAAwBQ,KACxB,cAAC,EAAD,CACEX,cAAeQ,EACfP,KAAMA,EACNC,UAAWkB,KAAKlB,mB,GArBRmB,IAAMC,W,MCZxBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.bc279cae.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React from 'react';\n\ninterface Props {\n  selectedTabId: string;\n  tabs: Tab[];\n  changeTab: (value: string) => void;\n}\n\nexport const Tabs: React.FC<Props> = (props) => {\n  const { selectedTabId, tabs, changeTab } = props;\n\n  return (\n    <>\n      <ul className=\"nav nav-tabs\">\n        {tabs.map(tab => (\n          <li key={tab.id}>\n            <button\n              type=\"button\"\n              onClick={() => changeTab(tab.id)}\n              className={classNames({\n                'nav-link': true,\n                active: tab.id === selectedTabId,\n              })}\n            >\n              {tab.title}\n            </button>\n          </li>\n        ))}\n      </ul>\n\n      <p>\n        {tabs.find(tab => tab.id === selectedTabId)?.content}\n      </p>\n    </>\n  );\n};\n","import React from 'react';\n\nimport './App.scss';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Tabs } from './components/Tabs';\n\nconst tabs: Tab[] = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\ninterface State {\n  selectedTab: Tab;\n}\n\nclass App extends React.Component<{}, State> {\n  state: State = {\n    selectedTab: tabs[0],\n  };\n\n  changeTab = (tabId: string) => {\n    const currentTab = tabs.find(tab => tab.id === tabId) || tabs[0];\n\n    this.setState({ selectedTab: currentTab });\n  };\n\n  render() {\n    const { selectedTab } = this.state;\n    const { id, title } = selectedTab;\n\n    return (\n      <div className=\"App\">\n        <h1>{`Selected tab is ${title}`}</h1>\n        <Tabs\n          selectedTabId={id}\n          tabs={tabs}\n          changeTab={this.changeTab}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}